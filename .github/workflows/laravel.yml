name: Laravel

on:
 push:
   branches: [ '**' ]

jobs:
  laravel-tests:

    runs-on:  ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest]
        node-version: [10, 12, 14]

    if: ${{matrix.os == 'ubuntu-latest'}}
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_USER: "laravel_user"
          MYSQL_PASSWORD: "laravel_pass"
          MYSQL_ROOT_PASSWORD: "root"
          MYSQL_DATABASE: "laravel"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.0'
      if: ${{matrix.os == 'ubuntu-latest'}}
      - uses: actions/checkout@v3
      else:
        - uses: actions/checkout@v1
        - uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - uses: azure/sql-action@v1
          with:
            server-name: SQL_SERVER_NAME
            connection-string: ${{â€¯secrets.AZURE_SQL_CONNECTION_STRING }}
            dacpac-package: './Database.dacpac'
      - name: Copy .env ubuntu
        if: ${{matrix.os == 'ubuntu-latest'}}
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Copy .env windows
        if: ${{matrix.os == 'windows-latest'}}
        run: php -r "file_exists('.env') || copy .env.example .env"
      - name: Copy .env macos
        if: ${{matrix.os == 'macos-latest'}}
        run: php -r "file_exists('.env') || cp -R .env.example .env"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run:  |
              if [${{matrix.os == 'windows-latest'}}]
                takeown /f storage bootstrap/cache /r /d y
                icacls storage bootstrap/cache /grant administrators:F /t
              elseif [${{matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'}}]
                chmod -R 777 storage bootstrap/cache
              fi
        shell: bash
      - name: Clear Cache
        run: php artisan cache:clear; php artisan config:clear;
      - name: Migrate
        run: php artisan migrate:fresh
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          MYSQL_DATABASE: laravel
          DB_USERNAME: laravel_user
          DB_PASSWORD: laravel_pass
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: vendor/bin/phpunit
      if: ${{matrix.os == 'ubuntu-latest'}}
      - name: logout
          run: |
              az logout
